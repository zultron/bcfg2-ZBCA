# ZBCA configuration file
# ZBCA uses this configuration instead of openssl.cnf
# Most values here should be obtainable from openssl.cnf

[global]
verify_certs = true
# comma-separated list of CAs
cas = int2
default_ca = int2

[int2]
# default settings for certs
key_default_bits = 2048
# pyOpenSSL v0.10 supports only sha1.  v0.13 should support sha512.
req_default_md = sha1
cert_default_md = sha1
# default number of days before expiration, starting today
cert_default_days = 365
# by default, generate a server cert
cert_default_extensions = server
# ca expires in 3 years
ca_days = 1096
# Include these fields in the subject
dn_fields = C,ST,L,O,OU,CN

[int2-dn-defaults]
# Defaults for omitted fields
C = US
ST = Texas
L = Austin
O = Zultron

[int2-extensions-server]
# extensions for extensions='server'
basicConstraints = CA:FALSE,pathlen:0;critical
keyUsage = nonRepudiation,digitalSignature,keyEncipherment
extendedKeyUsage = serverAuth,clientAuth,emailProtection,timeStamping
subjectKeyIdentifier = hash;subject=cert
authorityKeyIdentifier = keyid,issuer;issuer=ca
nsCertType = server,client,email
crlDistributionPoints = URI:http://www.zultron.com/ca/zultron-ca.crl.pem

[int2-extensions-client]
# extensions for extensions='client'
basicConstraints=CA:FALSE,pathlen:0;critical
keyUsage = nonRepudiation,digitalSignature,keyEncipherment
extendedKeyUsage = codeSigning,clientAuth,emailProtection,timeStamping
nsCertType = client, email, objsign
crlDistributionPoints = URI:http://www.zultron.com/ca/zultron-ca.crl.pem
subjectKeyIdentifier=hash;subject=cert
authorityKeyIdentifier=keyid,issuer;issuer=ca
